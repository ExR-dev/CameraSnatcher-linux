gcc godbolt.org



Things that dont matter (please-don'ts):

i++ vs ++i

register int
for (register ...)

inline.

bitshifting to replace multiply/divide.

<Inline assembly>


Maybe good:

loop unrolling.

loop hoisting/invariant code motion.

if else chains to switch cases.




Do's:

lookup table for sine/cosine.
float sin_val = lookup_sin()
float lookup_t[] = { 0.0f, 0.09...f, ...}

lookup table for function calls that can be indexed.

Reduce padding in structs.

tail calls for recursive funcs.


Keep in mind's:

branches are expensive.

Break up for loops with constant function calls to one loop per function. (cache friendly)



Advanced topics:
custom allocator

modular code.




Threads:

Deadlocks: multiple threads access same meory same time.
Livelock: two threads think a deadlock will happen and wait for each other.
Race conditions: two threads try to change the same data.
Data races:  one thread reads memory that another thread is writing.
Priority inversion: 

Asynchronous IO:
aio_read: unix
ReadFile: windows
